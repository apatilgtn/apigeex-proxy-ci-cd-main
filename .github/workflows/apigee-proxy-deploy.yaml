name: proxy-ci  # Descriptive workflow name

on:
  push:
    branches: [ main ]  # Only trigger on pushes to the main branch
    paths:
      - '.github/workflows/apigee-proxy-deploy.yaml'  # Trigger if workflow file changes
      - 'src/**'  # Trigger if any files in src directory change

jobs:
  build:  # Job name
    name: "Deploy To Dev"  # Descriptive job name
    runs-on: ubuntu-latest  # Run the job on an Ubuntu runner

    permissions:
      contents: read  # Read access to repository content
      id-token: write  # Write access to identify the user

    steps:
      - uses: actions/checkout@v4  # Checkout the repository code

      - name: 'Auth'
        uses: 'google-github-actions/auth@v2'
        with:
          //credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
          workload_identity_provider: 'projects/1039037619425/locations/global/workloadIdentityPools/github-actions/providers/github-actions-oidc'
          service_account: 'github-actions-workflow@vital-scout-430808-k8.iam.gserviceaccount.com'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: 'Use gcloud CLI'
        run: 'gcloud info'

      - name: Create API bundle
        run: zip -r proxy.zip apiproxy  # Bundle the API proxy directory

      - name: Upload API Proxy Bundle
        id: upload
        env:
          APIGEE_ORG: ${{ secrets.APIGEE_ORG }}
        run: |
          ACCESS_TOKEN=$(gcloud auth print-access-token)
          response=$(curl -v --fail -X POST \
            -H "Content-Type: multipart/form-data" \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -F "file=@proxy.zip" \
            "https://apigee.googleapis.com/v1/organizations/$APIGEE_ORG/apis?action=import&name=hello-world" \
            --silent)

          echo "APIgee Response: $response"
          revision=$(echo "$response" | jq --raw-output .revision)
          echo "apigee-revision=$revision" >> $GITHUB_OUTPUT

      - name: Deploy Revision  # Deploy the uploaded revision to dev environment
        env:
          APIGEE_ORG: ${{ secrets.APIGEE_ORG }}
        run: |
          ACCESS_TOKEN=$(gcloud auth print-access-token)
          curl --fail -X POST \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            "https://apigee.googleapis.com/v1/organizations/$APIGEE_ORG/environments/dev/apis/hello-world-test/revisions/${{ steps.upload.outputs.apigee-revision }}/deployments?override=true"
